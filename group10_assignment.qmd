---
title: "Lab 7 Assignment: Group 10"
author: "Pablo Fernandez (s243357), Edene Levine (s240875), Molly Hong-Minh (s242955), Vinit Vasa (s242582)"
format:
  html:
    embed-resources: true
editor: visual
---

## PCA tidyverse style

## 1. Loading libraries

```{r}
#| warning: false
#| message: false

library(tidyverse)
library(broom)  # devtools::install_github("tidymodels/broom")
library(cowplot)
```

## 2. Loading the data

```{r}
#| warning: false
#| message: false

biopsy <- read_csv("https://wilkelab.org/classes/SDS348/data_sets/biopsy.csv")
```

**Note:**

`prcomp()` function can only deal with numeric columns - we need to remove all non-numeric columns from the data. by using `where(is.numeric)`

Want to scale the data values to unit variance before PCA - using the argument `scale = TRUE` in `prcomp()`.

```{r}
pca_fit <- biopsy %>% 
  select(where(is.numeric)) %>% # retain only numeric columns
  prcomp(scale = TRUE) # do PCA on scaled data
```

Alternative to `scale = TRUE`, we could also have scaled the data by explicitly invoking the `scale()` function.

```{r}
pca_fit <- biopsy %>% 
  select(where(is.numeric)) %>% # retain only numeric columns
  scale() %>% # scale data
  prcomp() # do PCA
```

## 3. Plot the data in PC coordinates

Combining the PC coordinates with the original dataset

Color points by categorical variables present in the original data but removed for the PCA by `augment()` function from broom, takes as arguments the fitted model and the original data.

The columns containing the fitted coordinates are called `.fittedPC1`, `.fittedPC2`, etc.

```{r}
pca_fit %>%
  augment(biopsy) %>% # add original dataset back in
  ggplot(aes(.fittedPC1, .fittedPC2, color = outcome)) + 
  geom_point(size = 1.5) +
  scale_color_manual(
    values = c(malignant = "#D55E00", benign = "#0072B2")
  ) +
  theme_half_open(12) + background_grid()
```

## 4. Plot the rotation matrix

The rotation matrix is stored as `pca_fit$rotation`

We’ll extract it using the `tidy()` function from broom. When applied to `prcomp` objects, the `tidy()` function takes an additional argument `matrix`, which we set to `matrix = "rotation"` to extract the rotation matrix.

```{r}
# extract rotation matrix
pca_fit %>%
  tidy(matrix = "rotation")
```

##### Here we can see the cells we have and the dataframe we have

```{r}
pca_fit %>%
  tidy(matrix = "rotation") %>%
  filter(PC == 1:2) %>%
  pivot_wider(names_from = "PC", names_prefix = "PC", values_from = "value")

```

#### Now in the context of a plot:

```{r}
# define arrow style for plotting
arrow_style <- arrow(
  angle = 20, ends = "first", type = "closed", length = grid::unit(8, "pt")
)

# plot rotation matrix
pca_fit %>%
  tidy(matrix = "rotation") %>%
  pivot_wider(names_from = "PC", names_prefix = "PC", values_from = "value") %>%
  ggplot(aes(PC1, PC2)) +
  geom_segment(xend = 0, yend = 0, arrow = arrow_style) +
  geom_text(
    aes(label = column),
    hjust = 1, nudge_x = -0.02, 
    color = "#904C2F"
  ) +
  xlim(-1.25, .5) + ylim(-.5, 1) +
  coord_fixed() + # fix aspect ratio to 1:1
  theme_minimal_grid(12)

```

We can see the Mitoses is not really related to the others.

## 5. Plot the variance explained by each PC

Extract this information using the `tidy()` function from broom, now by setting the `matrix` argument to `matrix = "eigenvalues"`.

```{r}
pca_fit %>%
  tidy(matrix = "eigenvalues")
```

## 6. Plot

```{r}
pca_fit %>%
  tidy(matrix = "eigenvalues") %>%
  ggplot(aes(PC, percent)) +
  geom_col(fill = "#56B4E9", alpha = 0.8) +
  scale_x_continuous(breaks = 1:9) +
  scale_y_continuous(
    labels = scales::percent_format(),
    expand = expansion(mult = c(0, 0.01))
  ) +
  theme_minimal_hgrid(12)

```

> The plot clearly shows that the first principal component (PC1) accounts for the largest proportion of the total variance (≈65%), while the remaining components contribute much less. This indicates that most of the structure and separation between sample groups can be captured by PC1 alone, allowing for effective dimensionality reduction without significant loss of information.
